// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Telerik.Outlook.Infrastructure.UIMaps.NewAppointmentUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class NewAppointmentUIMap
    {
        
        /// <summary>
        /// EnterSubject - Use 'EnterSubjectParams' to pass parameters into this method.
        /// </summary>
        public void EnterSubject()
        {
            #region Variable Declarations
            WpfEdit uISubjectTextBoxEdit = this.UIMarktelerikdomaincomWindow.UISubjectTextBoxEdit;
            #endregion

            // Type 'hey' in 'SubjectTextBox' text box
            uISubjectTextBoxEdit.Text = this.EnterSubjectParams.UISubjectTextBoxEditText;
        }
        
        /// <summary>
        /// EnterDescription - Use 'EnterDescriptionParams' to pass parameters into this method.
        /// </summary>
        public void EnterDescription()
        {
            #region Variable Declarations
            WpfEdit uIDescriptionTextBoxEdit = this.UIMarktelerikdomaincomWindow.UIDescriptionTextBoxEdit;
            #endregion

            // Type 'Hello' in 'DescriptionTextBox' text box
            uIDescriptionTextBoxEdit.Text = this.EnterDescriptionParams.UIDescriptionTextBoxEditText;
        }
        
        /// <summary>
        /// ClickOk
        /// </summary>
        public void ClickOk()
        {
            #region Variable Declarations
            WpfButton uIOKButton = this.UIMarktelerikdomaincomWindow.UIOKButton;
            #endregion

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(46, 11));
        }
        
        #region Properties
        public virtual EnterSubjectParams EnterSubjectParams
        {
            get
            {
                if ((this.mEnterSubjectParams == null))
                {
                    this.mEnterSubjectParams = new EnterSubjectParams();
                }
                return this.mEnterSubjectParams;
            }
        }
        
        public virtual EnterDescriptionParams EnterDescriptionParams
        {
            get
            {
                if ((this.mEnterDescriptionParams == null))
                {
                    this.mEnterDescriptionParams = new EnterDescriptionParams();
                }
                return this.mEnterDescriptionParams;
            }
        }
        
        public UIMarktelerikdomaincomWindow UIMarktelerikdomaincomWindow
        {
            get
            {
                if ((this.mUIMarktelerikdomaincomWindow == null))
                {
                    this.mUIMarktelerikdomaincomWindow = new UIMarktelerikdomaincomWindow();
                }
                return this.mUIMarktelerikdomaincomWindow;
            }
        }
        #endregion
        
        #region Fields
        private EnterSubjectParams mEnterSubjectParams;
        
        private EnterDescriptionParams mEnterDescriptionParams;
        
        private UIMarktelerikdomaincomWindow mUIMarktelerikdomaincomWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterSubject'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class EnterSubjectParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'hey' in 'SubjectTextBox' text box
        /// </summary>
        public string UISubjectTextBoxEditText = "hey";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'EnterDescription'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class EnterDescriptionParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'Hello' in 'DescriptionTextBox' text box
        /// </summary>
        public string UIDescriptionTextBoxEditText = "Hello";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMarktelerikdomaincomWindow : WpfWindow
    {
        
        public UIMarktelerikdomaincomWindow()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "mark@telerikdomain.com - calendar";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public WpfEdit UISubjectTextBoxEdit
        {
            get
            {
                if ((this.mUISubjectTextBoxEdit == null))
                {
                    this.mUISubjectTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUISubjectTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "SubjectTextBox";
                    this.mUISubjectTextBoxEdit.WindowTitles.Add("mark@telerikdomain.com - calendar");
                    #endregion
                }
                return this.mUISubjectTextBoxEdit;
            }
        }
        
        public WpfEdit UIDescriptionTextBoxEdit
        {
            get
            {
                if ((this.mUIDescriptionTextBoxEdit == null))
                {
                    this.mUIDescriptionTextBoxEdit = new WpfEdit(this);
                    #region Search Criteria
                    this.mUIDescriptionTextBoxEdit.SearchProperties[WpfEdit.PropertyNames.AutomationId] = "DescriptionTextBox";
                    this.mUIDescriptionTextBoxEdit.WindowTitles.Add("mark@telerikdomain.com - calendar");
                    #endregion
                }
                return this.mUIDescriptionTextBoxEdit;
            }
        }
        
        public WpfButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "OKButton";
                    this.mUIOKButton.WindowTitles.Add("mark@telerikdomain.com - calendar");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfEdit mUISubjectTextBoxEdit;
        
        private WpfEdit mUIDescriptionTextBoxEdit;
        
        private WpfButton mUIOKButton;
        #endregion
    }
}

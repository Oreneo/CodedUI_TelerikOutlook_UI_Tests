// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 12.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Telerik.Outlook.Infrastructure.UIMaps.HomeMenuUIMapClasses
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WpfControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public partial class HomeMenuUIMap
    {
        
        /// <summary>
        /// ClickDeleteMail
        /// </summary>
        public void ClickDeleteMail()
        {
            #region Variable Declarations
            WpfButton uIRadRibbonButtonButton = this.UIMarktelerikdomaincomWindowWrapper.UIMarktelerikdomaincomWindow.UIRadRibbonViewTabList.UIHomeTabPage.UIDeleteGroup.UIRadRibbonButtonButton;
            #endregion

            // Click 'RadRibbonButton' button
            Mouse.Click(uIRadRibbonButtonButton, new Point(26, 20));
        }
        
        /// <summary>
        /// ClickNewEmailButton
        /// </summary>
        public void ClickNewEmailButton()
        {
            #region Variable Declarations
            WpfButton uIRadRibbonButtonButton = this.UIMarktelerikdomaincomWindowWrapper.UIMarktelerikdomaincomWindow.UIRadRibbonViewTabList.UIHomeTabPage.UINewGroup.UIRadRibbonButtonButton;
            #endregion

            // Click 'RadRibbonButton' button
            Mouse.Click(uIRadRibbonButtonButton, new Point(25, 34));
        }
        
        /// <summary>
        /// ClickFollowUpTagNoDate
        /// </summary>
        public void ClickFollowUpTagNoDate()
        {
            #region Variable Declarations
            WpfButton uIRadRibbonDropDownButButton = this.UIMarktelerikdomaincomWindowWrapper.UIMarktelerikdomaincomWindow.UIRadRibbonViewTabList.UIHomeTabPage.UITagsGroup.UIRadRibbonDropDownButButton;
            WpfMenuItem uINoDateMenuItem = this.UIMarktelerikdomaincomWindowWrapper.UIMarktelerikdomaincomWindow.UIRadRibbonViewTabList.UIHomeTabPage.UINoDateMenuItem;
            #endregion

            // Click 'RadRibbonDropDownButton' button
            Mouse.Click(uIRadRibbonDropDownButButton, new Point(6, 28));

            // Click 'No Date' menu item
            Mouse.Click(uINoDateMenuItem, new Point(52, 7));
        }
        
        #region Properties
        public UIMarktelerikdomaincomWindowWrapper UIMarktelerikdomaincomWindowWrapper
        {
            get
            {
                if ((this.mUIMarktelerikdomaincomWindowWrapper == null))
                {
                    this.mUIMarktelerikdomaincomWindowWrapper = new UIMarktelerikdomaincomWindowWrapper();
                }
                return this.mUIMarktelerikdomaincomWindowWrapper;
            }
        }
        
        public UIMarktelerikdomaincomWindow1 UIMarktelerikdomaincomWindow
        {
            get
            {
                if ((this.mUIMarktelerikdomaincomWindow == null))
                {
                    this.mUIMarktelerikdomaincomWindow = new UIMarktelerikdomaincomWindow1();
                }
                return this.mUIMarktelerikdomaincomWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIMarktelerikdomaincomWindowWrapper mUIMarktelerikdomaincomWindowWrapper;
        
        private UIMarktelerikdomaincomWindow1 mUIMarktelerikdomaincomWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMarktelerikdomaincomWindowWrapper : WpfWindow
    {
        
        public UIMarktelerikdomaincomWindowWrapper()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "mark@telerikdomain.com - My Application";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public UIMarktelerikdomaincomWindow UIMarktelerikdomaincomWindow
        {
            get
            {
                if ((this.mUIMarktelerikdomaincomWindow == null))
                {
                    this.mUIMarktelerikdomaincomWindow = new UIMarktelerikdomaincomWindow(this);
                }
                return this.mUIMarktelerikdomaincomWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIMarktelerikdomaincomWindow mUIMarktelerikdomaincomWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMarktelerikdomaincomWindow : WpfCustom
    {
        
        public UIMarktelerikdomaincomWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MainView";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public UIRadRibbonViewTabList UIRadRibbonViewTabList
        {
            get
            {
                if ((this.mUIRadRibbonViewTabList == null))
                {
                    this.mUIRadRibbonViewTabList = new UIRadRibbonViewTabList(this);
                }
                return this.mUIRadRibbonViewTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIRadRibbonViewTabList mUIRadRibbonViewTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRadRibbonViewTabList : WpfTabList
    {
        
        public UIRadRibbonViewTabList(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "richTextBoxRibbonUI";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public UIHomeTabPage UIHomeTabPage
        {
            get
            {
                if ((this.mUIHomeTabPage == null))
                {
                    this.mUIHomeTabPage = new UIHomeTabPage(this);
                }
                return this.mUIHomeTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIHomeTabPage mUIHomeTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHomeTabPage : WpfTabPage
    {
        
        public UIHomeTabPage(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Home";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public UINewGroup UINewGroup
        {
            get
            {
                if ((this.mUINewGroup == null))
                {
                    this.mUINewGroup = new UINewGroup(this);
                }
                return this.mUINewGroup;
            }
        }
        
        public UIDeleteGroup UIDeleteGroup
        {
            get
            {
                if ((this.mUIDeleteGroup == null))
                {
                    this.mUIDeleteGroup = new UIDeleteGroup(this);
                }
                return this.mUIDeleteGroup;
            }
        }
        
        public WpfMenuItem UITomorrowMenuItem
        {
            get
            {
                if ((this.mUITomorrowMenuItem == null))
                {
                    this.mUITomorrowMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUITomorrowMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "Tomorrow";
                    this.mUITomorrowMenuItem.WindowTitles.Add("mark@telerikdomain.com - My Application");
                    #endregion
                }
                return this.mUITomorrowMenuItem;
            }
        }
        
        public UITagsGroup UITagsGroup
        {
            get
            {
                if ((this.mUITagsGroup == null))
                {
                    this.mUITagsGroup = new UITagsGroup(this);
                }
                return this.mUITagsGroup;
            }
        }
        
        public WpfMenuItem UINoDateMenuItem
        {
            get
            {
                if ((this.mUINoDateMenuItem == null))
                {
                    this.mUINoDateMenuItem = new WpfMenuItem(this);
                    #region Search Criteria
                    this.mUINoDateMenuItem.SearchProperties[WpfMenuItem.PropertyNames.Name] = "No Date";
                    this.mUINoDateMenuItem.WindowTitles.Add("mark@telerikdomain.com - My Application");
                    #endregion
                }
                return this.mUINoDateMenuItem;
            }
        }
        #endregion
        
        #region Fields
        private UINewGroup mUINewGroup;
        
        private UIDeleteGroup mUIDeleteGroup;
        
        private WpfMenuItem mUITomorrowMenuItem;
        
        private UITagsGroup mUITagsGroup;
        
        private WpfMenuItem mUINoDateMenuItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UINewGroup : WpfGroup
    {
        
        public UINewGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "New";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public WpfButton UIRadRibbonButtonButton
        {
            get
            {
                if ((this.mUIRadRibbonButtonButton == null))
                {
                    this.mUIRadRibbonButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRadRibbonButtonButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "RadRibbonButton";
                    this.mUIRadRibbonButtonButton.WindowTitles.Add("mark@telerikdomain.com - My Application");
                    #endregion
                }
                return this.mUIRadRibbonButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIRadRibbonButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIDeleteGroup : WpfGroup
    {
        
        public UIDeleteGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Delete";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public WpfButton UIRadRibbonButtonButton
        {
            get
            {
                if ((this.mUIRadRibbonButtonButton == null))
                {
                    this.mUIRadRibbonButtonButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRadRibbonButtonButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "RadRibbonButton";
                    this.mUIRadRibbonButtonButton.WindowTitles.Add("mark@telerikdomain.com - My Application");
                    #endregion
                }
                return this.mUIRadRibbonButtonButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIRadRibbonButtonButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UITagsGroup : WpfGroup
    {
        
        public UITagsGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Tags";
            this.WindowTitles.Add("mark@telerikdomain.com - My Application");
            #endregion
        }
        
        #region Properties
        public WpfButton UIRadRibbonDropDownButButton
        {
            get
            {
                if ((this.mUIRadRibbonDropDownButButton == null))
                {
                    this.mUIRadRibbonDropDownButButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUIRadRibbonDropDownButButton.SearchProperties[WpfButton.PropertyNames.HelpText] = "RadRibbonDropDownButton";
                    this.mUIRadRibbonDropDownButButton.WindowTitles.Add("mark@telerikdomain.com - My Application");
                    #endregion
                }
                return this.mUIRadRibbonDropDownButButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUIRadRibbonDropDownButButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIMarktelerikdomaincomWindow1 : WpfWindow
    {
        
        public UIMarktelerikdomaincomWindow1()
        {
            #region Search Criteria
            this.SearchProperties[WpfWindow.PropertyNames.Name] = "mark@telerikdomain.com - calendar";
            this.SearchProperties.Add(new PropertyExpression(WpfWindow.PropertyNames.ClassName, "HwndWrapper", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public UIItemCustom UIItemCustom
        {
            get
            {
                if ((this.mUIItemCustom == null))
                {
                    this.mUIItemCustom = new UIItemCustom(this);
                }
                return this.mUIItemCustom;
            }
        }
        #endregion
        
        #region Fields
        private UIItemCustom mUIItemCustom;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIItemCustom : WpfCustom
    {
        
        public UIItemCustom(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfControl.PropertyNames.ClassName] = "Uia.MainView";
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public UIRadRibbonViewTabList1 UIRadRibbonViewTabList
        {
            get
            {
                if ((this.mUIRadRibbonViewTabList == null))
                {
                    this.mUIRadRibbonViewTabList = new UIRadRibbonViewTabList1(this);
                }
                return this.mUIRadRibbonViewTabList;
            }
        }
        #endregion
        
        #region Fields
        private UIRadRibbonViewTabList1 mUIRadRibbonViewTabList;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIRadRibbonViewTabList1 : WpfTabList
    {
        
        public UIRadRibbonViewTabList1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabList.PropertyNames.AutomationId] = "richTextBoxRibbonUI";
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public UIHomeTabPage1 UIHomeTabPage
        {
            get
            {
                if ((this.mUIHomeTabPage == null))
                {
                    this.mUIHomeTabPage = new UIHomeTabPage1(this);
                }
                return this.mUIHomeTabPage;
            }
        }
        #endregion
        
        #region Fields
        private UIHomeTabPage1 mUIHomeTabPage;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIHomeTabPage1 : WpfTabPage
    {
        
        public UIHomeTabPage1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfTabPage.PropertyNames.Name] = "Home";
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public UIAppointmentGroup UIAppointmentGroup
        {
            get
            {
                if ((this.mUIAppointmentGroup == null))
                {
                    this.mUIAppointmentGroup = new UIAppointmentGroup(this);
                }
                return this.mUIAppointmentGroup;
            }
        }
        #endregion
        
        #region Fields
        private UIAppointmentGroup mUIAppointmentGroup;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "12.0.31101.0")]
    public class UIAppointmentGroup : WpfGroup
    {
        
        public UIAppointmentGroup(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WpfGroup.PropertyNames.Name] = "Appointment";
            this.WindowTitles.Add("mark@telerikdomain.com - calendar");
            #endregion
        }
        
        #region Properties
        public WpfButton UICreateappointmentButton
        {
            get
            {
                if ((this.mUICreateappointmentButton == null))
                {
                    this.mUICreateappointmentButton = new WpfButton(this);
                    #region Search Criteria
                    this.mUICreateappointmentButton.SearchProperties[WpfButton.PropertyNames.AutomationId] = "CreateAppointment";
                    this.mUICreateappointmentButton.WindowTitles.Add("mark@telerikdomain.com - calendar");
                    #endregion
                }
                return this.mUICreateappointmentButton;
            }
        }
        #endregion
        
        #region Fields
        private WpfButton mUICreateappointmentButton;
        #endregion
    }
}
